<chapter id="fwupgrade">
    <title>Firmware upgrade</title>

    <sect1 id="fwupgrade_recompiling">
        <title>Recompiling the Firmware</title>
        <para>
        The &userial; firmware is pre-compiled for the ATMEL AT90USB647 chip.
        The software can be compiled using &link_avrgcc; under Linux, *BSD and Mac OS, or &link_winavr; under Windows.
        Just type <command>make</command> on the command line prompt.
        </para>
        <para>
        Alternative target or frequency can conveniently be set by overriding the <command>MCU</command> and <command>F_CPU</command>
        variables in the project <filename>Makefile</filename>.
        Alternatively, the variables can be specified on the command line, as in the following example:
        </para>
        <programlisting>make MCU=at90usb162 F_CPU=8000000UL</programlisting>
        <para>
        The file <filename>version.h</filename> allows to selectively disable some features in the firmware.
        These compile switched all start with the prefix <command>FEATURE_</command>.
        A value of <command>1</command> enables the feature, a <command>0</command> disables it.
        </para>
    </sect1>

    <sect1 id="fwupgrade_bumbleb">
        <title>Recompiling the Firmware for the &bumbleb; board</title>
        <para>
        The build system will compile the firmware for the &userial; board as default.
        If you want to build the firmware for &bumbleb; then you need to set the variable <command>BOARD</command>
        to <command>BUMBLEB_BOARD</command> in the file <filename>Makefile</filename>.
        </para>
        <para>
        Alternatively, the board type can be given on the command line, as in the following example:
        </para>
        <programlisting>make BOARD=BUMBLEB_BOARD</programlisting>
    </sect1>

    <sect1 id="fwupgrade_flip">
        <title>Firmware upgrade using FLIP</title>
        <para>
        ATMEL ships the chip with a pre-programmed boot loader. This makes it possible to update the &userial; firmware
        with just a USB cable.
        All that's needed is a USB cable, a jumper and ATMEL's &link_flip; boot loader.
        Follow this list for an update of the firmware:
        </para>
        <orderedlist>
            <listitem>
                <para>Power down the &userial; board</para>
            </listitem>
            <listitem>
                <para>Close the jumper JP4</para>
            </listitem>
            <listitem>
                <para>Power up the &userial; board by connecting it to the PC</para>
            </listitem>
            <listitem>
                <para>Launch FLIP boot loader and update the firmware</para>
            </listitem>
            <listitem>
                <para>Power down the &userial; board</para>
            </listitem>
            <listitem>
                <para>Remove jumper JP4</para>
            </listitem>
        </orderedlist>
        <para>
        An alternative to FLIP, especially for Linux and OS X is &link_dfuprog;.
        </para>
    </sect1>

    <sect1 id="fwupgrade_buttload">
        <title>Firmware upgrade using ButtLoad</title>
        <para>
        Since ATMEL's FLIP boot loader is not Open Source and the protocol is not published, people have written alternative
        boot loaders. One very good boot loader is Dean Camera's &link_buttload;, that is also included in the &link_lufa; library.
        This boot loader uses a protocol documented in the application note &link_avr109;: Self Programming.
        </para>
        <para>
        Firmware upgrades are performed as in <xref linkend="fwupgrade_flip"/>, with the only variation in the download procedure.
        The following example used &avrdude; to download the firmware, but alternative clients, include AVR Studio, can be used instead.
        <programlisting>avrdude -p at90usb647 -P /dev/ttyACM0 -c avr109 -U flash:w:userial.hex</programlisting>
        </para>

        <sect2 id="bootloader_upgrade">
            <title>Upgrading the boot loader</title>
            <para>
            The boot loader itself can not be upgraded using a boot loader. It must be downloaded using the &jtag; interface.
            </para>
        </sect2>
    </sect1>
</chapter>
