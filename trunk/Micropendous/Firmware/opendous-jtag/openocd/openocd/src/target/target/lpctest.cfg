# script for luminary lpc1768


if { [info exists CHIPNAME] } {	
   set  _CHIPNAME $CHIPNAME    
} else {	 
   set  _CHIPNAME lpc1768
}

if { [info exists ENDIAN] } {	
   set  _ENDIAN $ENDIAN    
} else {	 
  # this defaults to a little endian
   set  _ENDIAN little
}

if { [info exists CPUTAPID ] } {
   set _CPUTAPID $CPUTAPID
} else {
  # force an error till we get a good number
   set _CPUTAPID 0x4ba00477
}

# jtag speed
jtag_khz 500

jtag_nsrst_delay 200
jtag_ntrst_delay 200

#LPC1768 Evaluation Board has only srst
#reset_config srst_only
reset_config trst_and_srst srst_pulls_trst

#jtag scan chain
jtag newtap $_CHIPNAME cpu -irlen 4 -ircapture 1 -irmask 0xf -expected-id $_CPUTAPID

# the luminary variant causes a software reset rather than asserting SRST
# this stops the debug registers from being cleared
# this will be fixed in later revisions of silicon
set _TARGETNAME [format "%s.cpu" $_CHIPNAME]
target create $_TARGETNAME cortex_m3 -endian $_ENDIAN -chain-position $_TARGETNAME -variant lm3s

# 4k working area at base of ram
# $_TARGETNAME configure -work-area-virt 0 -work-area-phys 0x20000000 -work-area-size 0x4000 -work-area-backup 0
$_TARGETNAME configure -work-area-virt 0 -work-area-phys 0x10000000 -work-area-size 0x8000 -work-area-backup 0

$_TARGETNAME configure -event reset-init {
	# Force target into ARM state
	armv4_5 core_state arm
	#do not remap 0x0000-0x0020 to anything but the flash
#	mwb 0xE01FC040 0x01
	mwb 0xE000ED08 0x00
}

#flash configuration
#flash bank stellaris 0 0 0 0 0
#flash bank lpc2000 0 0x80000 0 0 0
#flash bank lpc2000 0x0 0x80000 0 0 0 lpc1700 12000 calc_checksum
flash bank stellaris 0x0 0x80000 0 0 $_TARGETNAME

