#summary Instructions for modifying a LUFA Demo to work on a Micropendous

Note that not all LUFA demos can be run on Micropendous boards with compatible features.  LUFA demos target the AT90USB1287-based USBKey which has several additional peripherals.

== Required Software ==

To compile [http://www.fourwalledcubicle.com/LUFA.php LUFA] demos you will require [http://www.atmel.com/dyn/products/tools_card.asp?tool_id=3886 Atmel's FLIP] and [http://winavr.sourceforge.net/ WinAVR] under Windows, or `dfu-programmer` and `avr-gcc` under Linux.  See [SettingUpWindows] or [SettingUpUbuntuLinux] for more information.

== Preparing Files==

 # Extract the latest [http://code.google.com/p/micropendous/downloads/list Micropendous Distribution] to a working directory.
 # Extract the latest [http://www.fourwalledcubicle.com/LUFA.php LUFA] release to a different working directory.
 # copy over the `Board` directory from `Micropendous/libs/LUFA/LUFA/Drivers/Board/` to `LUFA/LUFA/Drivers/Board/`.  This allows you to compile any of the Micropendous-compatible LUFA demos without changing any code, just `makefile` defines.

== Modifying `Makefile` ==

Open up the `makefile` for editing in a non-formatting text editor, such as Window's Notepad, [http://notepad-plus.sourceforge.net/ NotePadd++], [http://www.eclipse.org Eclipse], or your favorite programmer's editor.

 * Change `MCU` from `at90usb1287` to the microcontroller on your board.  For example:
   {{{
MCU = at90usb162
   }}}
 * Change `BOARD` from `USBKEY` to `USER`
   {{{
BOARD  = USER
   }}}
 * If necessary, change `F_CPU` and `F_CLOCK` if you have a 16MHz version.
   {{{
F_CPU = 16000000
F_CLOCK = 16000000
   }}}
 * If you get a massive number of errors when you try to compile, you may need to change `LUFA_PATH`:
   {{{
LUFA_PATH = ../../libs/LUFA
   }}}

You are now ready to compile a LUFA demo for the Micropendous and load the resulting firmware.  See [ProgramAndTest] for more information.