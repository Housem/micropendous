#summary LUFA AVR ISP mkII clone AVR programmer

The latest version of this firmware is available in the latest [http://code.google.com/p/micropendous/downloads/list Micropendous Distribution] or via [http://code.google.com/p/micropendous/source/checkout SVN] in the `/Micropendous/Firmware/AVRISP` directory.  Copied directly from the [http://www.fourwalledcubicle.com/LUFA.php LUFA] project.

*Purpose:* Emulates [http://www.atmel.com Atmel]'s [http://www.atmel.com/dyn/products/tools_card.asp?tool_id=3808 AVRISP mkII In-System Programmer].  Allows in-system programming of "In-System Programmable via SPI Port" AVRs, including another Micropendous board's [BootloaderDFU USB Bootloader].

*Source Code:* [http://code.google.com/p/micropendous/source/browse/trunk/Micropendous/Firmware/AVRISP-mkII View] or [http://www.Micropendous.org/Distribution Download]

*Targets*: [Micropendous1], [Micropendous2], [Micropendous3], [Micropendous4] or any USB AVR based hardware

*USB Mode:* Device-mode enumerating as Custom-Class USB Device

*Status:* _Working_


== Usage ==

Compile and load the  AVRISP firmware onto your USB AVR by following the [ProgramAndTest] tutorial.

Connect your Micropendous board programmed with AVRISP firmware to another AVR using SPI (you can even connect to another USB AVR board to program its' [BootloaderDFU bootloader]):
|| *Micropendous* || *Target AVR* ||
|| `PB4`          || `RESET`      ||
|| `PB1(SCK)`     || `SCK`        ||
|| `PB2(MOSI)`    || `MOSI/PDI`   ||
|| `PB3(MISO)`    || `MISO/PDO`   ||
|| `GND`          || `GND`+`AGND` ||
|| `Vcc`          || `Vcc`+`AVcc` ||

http://micropendous.googlecode.com/svn/trunk/Pictures/AVRISP_mkII-Usage_Picture.jpg

You can either program your target AVR using [http://savannah.nongnu.org/projects/avrdude AVRdude] (which you already have installed if you have followed the [http://www.micropendous.org/QuickStart setup instructions]) or using [http://www.atmel.com/dyn/products/tools_card.asp?tool_id=2725 AVRStudio].

=== Using AVRdude ===

Start a *Command Prompt* under _Windows_ or a *Terminal* under _Linux_.  Change to the directory with the firmware you will upload to the target AVR.  You may need to run the following with `sudo` under _Linux_.  Run the following command:

{{{
avrdude -vv -F -P usb -c avrispmkII -p m32
}}}

which will check the connection to an ATmega32 IC.  To program a file called "FIRMWARE.hex", run the following command:

{{{
avrdude -vv -F -P usb -c avrispmkII -p m32 -U flash:w:FIRMWARE.hex
}}}

Remember to change `m32` to your target AVR's name.

=== Using AVRdude to Program the Bootloader of another Micropendous Board ===

Connect your Micropendous board loader with AVRISP firmware to your target board.  Change to the `/Micropendous/Firmware/BootloaderDFU` directory.  Edit the `makefile` to create a bootloader for your target AVR.  You simply need to uncomment the correct `MCU` and `BOOT_START` values.  Run `make` to compile.  Run `make program` to load the firmware using _avrdude_.
{{{
make
make program
}}}

If using an older version of _avrdude_ run the following command, which uses a local copy of `avrdude.conf` which includes ATmega32u4 and AT90USB162 ICs.

{{{
avrdude -vv -C ./avrdude.conf -P usb -c avrispmkII -p usb1287 -U flash:w:BootloaderDFU.hex
}}}