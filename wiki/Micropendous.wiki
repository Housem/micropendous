#summary USB AVR Development Board for the AT90USB1287 with Arduino Footprint

The [http://www.lis.inpg.fr/realise_au_lis/kicad/ KiCAD] design files for this board can be found in the [http://code.google.com/p/micropendous/source/checkout SVN] repository under the `/Micropendous/Design/Micropendous` [http://code.google.com/p/micropendous/source/browse/trunk/Micropendous/Design/Micropendous/  directory].

Assembled boards are now [http://www.ebay.com/sch/noodlehed/m.html?_nkw=micropendous available from NooElec]!

A blank PCB of this design can be purchased at cost through [http://batchpcb.com/index.php/Products/67008 BatchPCB].

http://micropendous.googlecode.com/svn/trunk/Micropendous/Design/Micropendous/Micropendous-Small_Picture.jpg

== Pinout ==

http://micropendous.googlecode.com/svn/trunk/Micropendous/Design/Micropendous/Micropendous-Pinout.jpg

== Features ==

  * Based on the [http://www.atmel.com/dyn/products/product_card.asp?PN=AT90USB1287 AT90USB1287]
  * USB Full Speed (12Mbit/s)
  * USB Device and Host Modes of operation
  * 120kb available FLASH memory for your programs (8kb used by USB bootloader - stock Atmel or [http://code.google.com/p/micropendous/source/browse/trunk/Micropendous/Firmware/BootloaderDFU LUFA])
  * 8 kbytes internal SRAM and 4 kbytes of internal EEPROM
  * up to 128 kbytes of [http://www.Micropendous.org/SRAM external SRAM]
  * microSD connector in SPI Mode
  * USB powered or DC powered
  * DC Power Jack, 2.1mm ID, Center-Positive, 5.5V to 16V Input (6V optimal)
  * 16MHz crystal
  * 25 available General Purpose IO Pins in an [http://www.Arduino.cc Arduino] configuration
  * [http://www.Opennect.org Opennect-MCU] connector for small and cheap expansion modules
  * PortB is [http://focus.ti.com/docs/prod/folders/print/txb0108.html bidirectionally voltage translated] to communicate with microSD or external peripherals
  * RESET and HWB buttons to enable firmware loading over USB (no external programmer required)
  * HWB can be used as a user button
  * USB-B Jack and USB-A Receptacle selectable with a GPIO pin
  * PortB, PortD, and PortB_3.3V available through [http://www.atmel.com/dyn/products/tools_card.asp?tool_id=2735 STK500-style] 10-pin headers
  * JTAG header
  * Size LxWxH (including headers): 3" x 2.1" x 0.8" =~ 8cm x 5.3cm x 2cm
  * completely OpenHardware Design, schematic/layout/!BillOfMaterials/assembly instructions [http://code.google.com/p/micropendous/source/browse/trunk/Micropendous/Design/Micropendous/ available] for Open Source [http://www.lis.inpg.fr/realise_au_lis/kicad/ KiCAD]
  * works with Open Source [http://www.fourwalledcubicle.com/LUFA.php LUFA] USB firmware library and Open Source [http://libusb.sourceforge.net LibUSB] software library, or with Open Source [http://pyserial.wiki.sourceforge.net/pySerial PySerial] library if using USBtoSerial or CDC based firmware.
  * [http://www.linux.org/ Linux] + [http://gcc.gnu.org/ AVR-GCC] + [http://www.fourwalledcubicle.com/LUFA.php LUFA] + [http://www.fourwalledcubicle.com/LUFA.php LUFA Bootloader] + [http://kicad.sourceforge.net KiCAD] + [http://dfu-programmer.sourceforge.net/ DFU-Programmer] allow you to develop Open Source and/or Open Hardware projects around a Micropendous-DIP board without ever touching proprietary software.

== !QuickNotes ==
 * *DO NOT* connect *GND* and *VCC*.  This will short your computer's USB power supply and may damage your computer and your Micropendous board
 * important pins: *PE3* controls TXB0108 `OE` pin, *PE6* is USB-A over-current flag, *PE4* is SRAM `nCE`, *PE5* is SRAM address bit 17, and *PE7* controls USB switch with USB-B=`0` and USB-A=`1`.
 * to start the bootloader, plug in your board and press both the RESET and HWB buttons, then release RESET, then release HWB
 * Due to the open construction of the board, do not use it on any conductive surface as it may create short circuits
 * PE2 (HWB) is pulled up to Vcc with a 47k resistor to disable the bootloader under normal operation.  This may influence your design decisions and usage of PE2.  Be careful this pin is not Low during RESET/START-UP or the board will enter the bootloader.
 * observe precautions for electrostatic sensitive components while handling the board
 * if your board has a communication error after being plugged in, press RESET
 * you may need to edit the `makefile` before compiling LUFA or Micropendous firmware demos.  The three key variables you need to be mindful of are:
{{{
MCU = at90usb1287
F_CPU = 16000000
BOARD = MICROPENDOUS_REV2
}}}

== !Power_Rails ==

The 5V regulator used is a [http://www.micrel.com/page.do?page=/product-info/products/mic39100.shtml MIC39100] capable of generating 1A at 5V from a 6V wall-wart such as the [http://search.digikey.com/us/en/products/KTPS24-06035MP/62-1114-ND Volgen KTPS24-06035MP] or [http://search.digikey.com/us/en/products/EMSA060300-P5P-SZ/T1089-P5P-ND CUI EMSA060300-P5P-SZ].  The USB-B connector bulk is used for heat dissipation as well as a significantly sized GND fill underneath the IC.  Refer to the [http://www.micrel.com/_PDF/mic39100.pdf datasheet] to derate output current at higher input voltages or higher operation temperatures.

The 3.3V regulator is a [http://www.torex.co.jp/english/products/detail.php?id=02100000061 SOT-89-5 XC6222B331] and its input power comes from the 5V rail.  Keep this in mind when estimating 5V power consumption.  It can source up to 500mA at 3.3V.  Refer to Pg.24 of the [http://www.torex.co.jp/english/products/pro02/pdf021/61-XC6222.pdf XC6222 Datasheet] for temperature derating curves.  The regulator is attached to approximately 1000sq.mm of 1oz copper.